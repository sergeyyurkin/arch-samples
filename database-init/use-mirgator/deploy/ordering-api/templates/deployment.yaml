{{- $name := include "ordering-api.fullname" . -}}
{{- $cfgname := printf "%s-%s" "cfg" $name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ordering-api.fullname" . }}
  labels:
    ufo: {{ $cfgname}}
    app: {{ template "ordering-api.name" . }}
    chart: {{ template "ordering-api.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ordering-api.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ordering-api.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: "{{ .Chart.Name }}-init"
          image: "groundnuty/k8s-wait-for:1.3"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: 
            - "job"
            - "myapp-ordering-migrator"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{- .Values.image.repository -}}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.env.values -}}
          {{- range .Values.env.values }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end -}}
          {{- end -}}
          {{- if .Values.env.configmap -}}
          {{- range .Values.env.configmap }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $cfgname }}
                  key: {{ .key }}
          {{- end -}}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
